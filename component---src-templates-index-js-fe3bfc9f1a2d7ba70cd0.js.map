{"version":3,"file":"component---src-templates-index-js-fe3bfc9f1a2d7ba70cd0.js","mappings":"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","sources":["webpack://flotiq-gatsby-shop-1/./src/components/ProductCard.js","webpack://flotiq-gatsby-shop-1/./src/sections/BestSellers.js","webpack://flotiq-gatsby-shop-1/./src/sections/Products.js","webpack://flotiq-gatsby-shop-1/./src/templates/index.js"],"sourcesContent":["import React from 'react';\nimport { Button, Card } from 'flotiq-components-react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst ProductCard = ({ name, price, productImage, buttonLabel, slug }) => (\n    <Card\n        bordered={false}\n        rounded=\"none\"\n        additionalClasses={['!bg-transparent mb-10 cursor-pointer']}\n    >\n        <Link to={`/${slug}`}>\n            <GatsbyImage\n                image={getImage(productImage)}\n                alt={name}\n                className=\"w-full\"\n            />\n        </Link>\n        <Card.Body additionalClasses={['!px-0 !pt-4']}>\n            <Link to={`/${slug}`}>\n                <Card.Title additionalClasses={['flex justify-between'\n            + ' !font-light !text-xl uppercase']}\n                >\n                    {name}\n                </Card.Title>\n            </Link>\n            <div className=\"flex items-center mt-4 space-x-7\">\n                <Button\n                    label={buttonLabel}\n                    rounded=\"none\"\n                    size=\"sm\"\n                    additionalClasses={['bg-transparent justify-center uppercase !text-md font-light text-primary',\n                        'border shadow-none uppercase !px-5', 'snipcart-add-item']}\n                    data-item-id={slug}\n                    data-item-price={price}\n                    data-item-image={productImage.publicURL}\n                    data-item-name={name}\n                    data-item-url=\"/\"\n                />\n                <Link to={`/${slug}`}>\n                    <p className=\"font-light text-2xl\">\n                        $\n                        {price}\n                    </p>\n                </Link>\n            </div>\n\n        </Card.Body>\n    </Card>\n);\n\nexport default ProductCard;\n","import React from 'react';\nimport { navigate } from 'gatsby';\nimport { Header } from 'flotiq-components-react';\nimport ProductCard from '../components/ProductCard';\n\nconst BestSellers = ({ products, additionalClass, headerText }) => (\n    <div className={['w-full', ...additionalClass].join(' ')}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Header\n                additionalClasses={['!text-xl md:!text-2xl !font-normal font-roboto uppercase !p-0']}\n            >\n                {headerText}\n            </Header>\n            <div\n                className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-x-10 mt-6 mb-6\"\n            >\n                {products.slice(0, 4).map((product) => (\n                    <ProductCard\n                        key={product.id}\n                        onClick={() => { navigate(`/${product.slug}`); }}\n                        name={product.name}\n                        description={product.description}\n                        price={product.price}\n                        productImage={product.productImage[0] && product.productImage[0].localFile}\n                        buttonLabel=\"Add to cart\"\n                        slug={product.slug}\n                    />\n                ))}\n            </div>\n        </div>\n    </div>\n);\n\nexport default BestSellers;\n","import React from 'react';\nimport { navigate } from 'gatsby';\nimport { Header } from 'flotiq-components-react';\nimport ProductCard from '../components/ProductCard';\n\nconst Products = ({ products, additionalClass, headerText }) => (\n    <div className={['max-w-7xl mx-auto px-4 sm:px-6 lg:px-8', ...additionalClass].join(' ')}>\n        <div className=\"flex items-center justify-between\">\n            <Header\n                additionalClasses={['!text-xl md:!text-2xl !font-normal font-roboto uppercase !p-0']}\n            >\n                {headerText}\n            </Header>\n        </div>\n        <div\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-x-10\n                mt-6 mb-6\"\n        >\n            {products.map((product) => (\n                <ProductCard\n                    key={product.id}\n                    onClick={() => { navigate(`/${product.slug}`); }}\n                    name={product.name}\n                    description={product.description}\n                    price={product.price}\n                    productImage={product.productImage[0] && product.productImage[0].localFile}\n                    buttonLabel=\"Add to cart\"\n                    slug={product.slug}\n                />\n            ))}\n        </div>\n    </div>\n);\n\nexport default Products;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../layouts/layout';\n// import CategoriesChoiceBar from '../components/CategoriesChoiceBar';\nimport BestSellers from '../sections/BestSellers';\nimport Products from '../sections/Products';\n\nconst IndexPage = ({ data }) => {\n    const products = data.allProduct.nodes;\n    // const categoryTabs = [\n    //     { name: 'New', href: '#', current: true },\n    //     { name: 'Shoes', href: '#', current: false },\n    //     { name: 'Clothing', href: '#', current: false },\n    //     { name: 'Accessories', href: '#', current: false },\n    // ];\n\n    return (\n        <Layout additionalClass={['bg-white']}>\n            <Helmet>\n                <title>{data.site.siteMetadata.title}</title>\n                <meta\n                    name=\"description\"\n                    content={data.site.siteMetadata.description}\n                />\n            </Helmet>\n            {/* <CategoriesChoiceBar\n                additionalClass={['my-5']}\n                categoryTabs={categoryTabs}\n            /> */}\n            <BestSellers\n                products={products}\n                additionalClass={['bg-green-gray py-14']}\n                headerText=\"Bestsellers\"\n            />\n            <Products\n                products={products}\n                additionalClass={['my-5']}\n                headerText=\"Products\"\n            />\n        </Layout>\n    );\n};\n\nexport const pageQuery = graphql`\nquery indexQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allProduct(\n      sort: {flotiqInternal: {createdAt: DESC}}\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        name\n        price\n        slug\n        description\n        id\n        productGallery {\n          extension\n          url\n          width\n          height\n          localFile {\n            publicURL\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, placeholder: NONE)\n            }\n          }\n        }\n        productImage {\n          extension\n          url\n          width\n          height\n          localFile {\n            publicURL\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, placeholder: NONE)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["_ref","name","price","productImage","buttonLabel","slug","React","Card","bordered","rounded","additionalClasses","Link","to","GatsbyImage","image","getImage","alt","className","Button","label","size","publicURL","products","additionalClass","headerText","concat","_toConsumableArray","join","Header","slice","map","product","ProductCard","key","id","onClick","navigate","description","localFile","data","allProduct","nodes","Layout","Helmet","site","siteMetadata","title","content","BestSellers","Products"],"sourceRoot":""}